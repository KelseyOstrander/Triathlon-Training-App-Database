/*SELECT QUERY 1: RETRIEVE ALL OF THE TRIATHLETES IN THE SYSTEM*/
SELECT TriathleteName, TriathleteLastName FROM Triathlete; 

/*SELECT QUERY 2*/
--FIND OUT THE ID's OF ALL THE TRAINING SESSIONS WHICH JOE DOE HAS LOGGED (THIS IS USEFUL IF YOU EVER WANT TO LOOK UP SPECIFIC INFORMATION ABOUT HIS TRAINING SESSIONS)
SELECT trainingSessionID
FROM TriathlonTrainingSessions
WHERE TriathleteID = 
(SELECT TriathleteID FROM Triathlete WHERE TriathleteName = 'JOE' AND TriathleteLastName = 'DOE'); 
 
 /*SELECT QUERY 3*/
 --FIND OUT ALL THE SPORTS THAT JOE DOE TRAINED DURING THE TRAINING SESSIONS ABOVE (TAKE NOTE THAT ONE TRAINING SESSION CAN INCLUDE MORE THAN ONE SPORTTYPE)--
 SELECT sportType
 FROM sport
 WHERE SessionID IN
 (SELECT trainingSessionID
FROM TriathlonTrainingSessions
WHERE TriathleteID = 
(SELECT TriathleteID FROM Triathlete WHERE TriathleteName = 'JOE' AND TriathleteLastName = 'DOE'));

/*SELECT QUERY 4*/
--FIND OUT ALL THE SPORTS THAT JOE DOE TRAINED DURING HIS TRAINING SESSIONS, AND GROUP BY SPORTTYPE--
--THIS IS A MORE INTUITIVE WAY OF LOOKING AT THE INFORMATION GATHERED FROM THE PREVIOUS QUERY, EG. IF YOU HAD 50+ LINES THIS WOULD RESOLVE THE ISSUE OF NEEDING TO TALLY THEM UP YOURSELF--
 SELECT SportType, COUNT(*)
 FROM sport
 WHERE SessionID IN
 (SELECT trainingSessionID
FROM TriathlonTrainingSessions
WHERE TriathleteID = 
(SELECT TriathleteID FROM Triathlete WHERE TriathleteName = 'JOE' AND TriathleteLastName = 'DOE'))
GROUP BY SportType;

/*SELECT QUERY 5*/
--FIND OUT ALL THE SPORTS THAT JOE DOE DID IN HIS TRAINING SESSIONS, AND WHICH TRAINING SESSIONS THEY COORDINATE TO--
--THIS IS ANOTHER WAY OF LOOKING AT THE INFORMATION RETRIEVED ABOVE, IF YOU WANT TO KNOW WHICH TRAINING SESSION INVOLVED WHICH SPORTS --
 SELECT SessionID, SportType
 FROM sport
 WHERE SessionID IN
 (SELECT trainingSessionID
FROM TriathlonTrainingSessions
WHERE TriathleteID = 
(SELECT TriathleteID FROM Triathlete WHERE TriathleteName = 'JOE' AND TriathleteLastName = 'DOE'))
GROUP BY SessionID, SportType
ORDER BY SESSIONID;

/*SELECT QUERY 6 */
--SEE ALL THE LOCATIONS IN WHICH TRIATHLETES ARE PLANNING TO COMPETE--
SELECT RaceLocation 
FROM raceGoals
GROUP BY raceLocation; 

/*SELECT QUERY 7: RETRIEVE THE NAMES OF ALL THE TRIATHLETES WHO ARE FEMALES*/
SELECT TriathleteName, TriathleteLastName 
FROM Triathlete
WHERE TriathleteGender = 'FEMALE'; 

/*SELECT QUERY 8: ORDER ALL TRIATHLETES IN ALPHABETICAL ORDER BY LAST NAME*/
--TO DO, update this so that lastname and first name are seperated by a comma 
--( THIS DOES NOT NEED TO BE DONE FOR THE PURPOSE OF THE ASSIGMENT, BUT IS A GOOD IDEA TO DO FOR FUTURE USE --
SELECT TriathleteLastName, TriathleteName
FROM TRIATHLETE
ORDER BY TriathleteLastName ASC; 

/*SELECT QUERY 9: RETRIEVE THE NUMBER OF ATHLETES IN THE DATABASE */
SELECT COUNT (DISTINCT TriathleteID)
FROM Triathlete;


/*SELECT QUERY 10: RETRIEVE ALL TRIATHLETES WITH THE SAME FIRST NAMES*/
--TODO IN FUTURE (NOT FOR ASSIGNMENT PURPOSES): COULD MAKE THIS MORE INTUITIVE BY INCLUDING THEIR LAST NAME AND/OR CREATING A TRIGGER THAT ALL DUPLICATES ARE FLAGGED--
SELECT TriathleteName
FROM Triathlete
GROUP BY TriathleteName
HAVING COUNT(*) > 1;

/*SELECT QUERY 11: RETRIEVE FASTEST SWIM SPEED*/
--TODO FOR FUTURE (NOT FOR ASSIGNMENT PURPOSES): COULD ADD measuringSystem to be more user friendly, could grad a float instead of the rounded value--
SELECT MAX(averageSpeed)
FROM speed
WHERE speedID =
(SELECT MAX(averageSpeed)
FROM sport
WHERE sportType = 'Swimming'); 

/*SELECT QUERY 12: RETRIEVE INFORMATION REGARDING THE FASTEST RUN RECORDED */
SELECT *
FROM speed
WHERE speedID =
(SELECT MAX(averageSpeed)
FROM sport
WHERE sportType = 'Running');

/*SELECT QUERY 13: RETRIEVE ALL OF THE ROUTES THAT BEGIN AT THE TRIATHLETES HOME AND END EITHER AT THE POOL OR THE LAKE*/
SELECT ROUTEID
FROM ROUTE
WHERE ROUTESTART = 'Home' AND ROUTEEND = 'Pool'
OR ROUTESTART = 'Home' AND ROUTEEND = 'Lake'
GROUP BY ROUTEID;

/*SELECT QUERY 14: RETRIEVE THE FIRST LOGGED TRAINING SESSION */
SELECT SESSIONID, SESSIONDATE
FROM TRAININGSESSION
WHERE ROWNUM = 1
ORDER BY SESSIONDATE;

/*SELECT QUERY 15: SELECT ALL THE BIKE MODELS USED FOR BIKE TRAINING SESSIONS*/
SELECT BikeFrameUsed
FROM BikeRide; 

/* SELECT QUERY 16: FIND THE IDs OF TRAINING SESSIONS IN WHICH THE TRIATHLETE WAS BORN AFTER 1980*/
SELECT trainingSessionID
FROM TriathlonTrainingSessions
WHERE TriathleteID IN
(SELECT TriathleteID FROM Triathlete WHERE TriathleteDOB > TO_DATE('1980-01-01', 'yyyy-mm-dd')); 

/*SELECT QUERY 17: RETRIEVE THE RUNNING SHOES THAT ARE USED FOR HIGH INTENSITY RUNNING*/
SELECT runShoeType
FROM running
WHERE sportID IN
(SELECT sportID FROM sport WHERE SportIntensity = 'High');

/*SELECT THE RUNNING SHOE TYPE USED FOR LOW INTENSITY RUNNING*/
SELECT runShoeType
FROM running
WHERE sportID IN
(SELECT sportID FROM sport WHERE SportIntensity = 'Low');

 


